/* * 官网地站:http://www.mob.com * 技术支持QQ: 4006852216 * 官方微信:ShareSDK   （如果发布新版本的话，我们将会第一时间通过微信将版本更新内容推送给您。如果使用过程中有任何问题，也可以通过微信与我们取得联系，我们将会在24小时内给予回复） * * Copyright (c) 2013年 mob.com. All rights reserved. */package com.example.myapplication.wxapi;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.widget.Toast;import androidx.annotation.Nullable;import com.example.myapplication.http.Api;import com.example.myapplication.http.UserConfig;import com.tencent.mm.opensdk.modelbase.BaseReq;import com.tencent.mm.opensdk.modelbase.BaseResp;import com.tencent.mm.opensdk.modelmsg.SendAuth;import com.tencent.mm.opensdk.openapi.IWXAPI;import com.tencent.mm.opensdk.openapi.IWXAPIEventHandler;import com.tencent.mm.opensdk.openapi.WXAPIFactory;import com.zhy.http.okhttp.OkHttpUtils;import com.zhy.http.okhttp.callback.StringCallback;import org.json.JSONException;import org.json.JSONObject;import okhttp3.Call;/** 微信客户端回调activity示例 */public class WXEntryActivity extends Activity implements IWXAPIEventHandler {    private IWXAPI api;    private static final int RETURN_MSG_TYPE_LOGIN = 1;    private static final int RETURN_MSG_TYPE_SHARE = 2;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        initViews();    }    public void initViews() {        //通过WXAPIFactory工厂获取IWXApI的示例        api = WXAPIFactory.createWXAPI(this, Api.WX_APP_ID,true);        //将应用的appid注册到微信        api.registerApp(Api.WX_APP_ID);        try {            boolean result =  api.handleIntent(getIntent(), this);            if(!result){                finish();            }        } catch (Exception e) {            e.printStackTrace();        }    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        api.handleIntent(data,this);    }    @Override    protected void onNewIntent(Intent intent) {        super.onNewIntent(intent);        setIntent(intent);        api.handleIntent(intent, this);        finish();    }    @Override    public void onReq(BaseReq baseReq) {        if(baseReq.getType() == 2){            finish();        }    }    @Override    public void onResp(BaseResp baseResp) {        //微信分享成功返回app的回调        if(baseResp.getType() == 2){            finish();        }        //登录回调        switch(baseResp.errCode) {            case BaseResp.ErrCode.ERR_OK:       //授权成功                switch (baseResp.getType()) {                    case RETURN_MSG_TYPE_LOGIN:                        Toast.makeText(WXEntryActivity.this, "授权成功", Toast.LENGTH_SHORT).show();                        String code = ((SendAuth.Resp) baseResp).code;                        //获取用户信息                        getAccessToken(code);                        break;                    case RETURN_MSG_TYPE_SHARE:                        Toast.makeText(WXEntryActivity.this, "微信分享成功", Toast.LENGTH_SHORT).show();                        finish();                        break;                }                break;            case BaseResp.ErrCode.ERR_USER_CANCEL:   //用户取消授权                finish();                break;            case BaseResp.ErrCode.ERR_AUTH_DENIED:   //用户拒绝授权                finish();                break;            default:                finish();                break;        }    }    private void getAccessToken(String code) {        UserConfig userConfig = UserConfig.instance();        OkHttpUtils.post()                .url("https://api.weixin.qq.com/sns/oauth2/access_token")                .addParams("appid", Api.WX_APP_ID)                .addParams("secret", Api.WX_SECRET)                .addParams("code", code)                .addParams("user_id", String.valueOf(userConfig.user_id))                .build()                .execute(new StringCallback() {                    @Override                    public void onError(Call call, Exception e, int id) {                        Toast.makeText(WXEntryActivity.this, "登录失败", Toast.LENGTH_SHORT).show();                        finish();                    }                    @Override                    public void onResponse(String response, int id) {                        try {                            JSONObject jsonObject = new JSONObject(response);                            String access = jsonObject.getString("access_token");                            String openId = jsonObject.getString("openid");                            getUserMsg(access, openId);                        } catch (JSONException e) {                            Toast.makeText(WXEntryActivity.this, "登录失败", Toast.LENGTH_SHORT).show();                            finish();                            e.printStackTrace();                        }                    }                });    }    private void getUserMsg(String access, String openId) {        UserConfig userConfig = UserConfig.instance();        OkHttpUtils.post()                .url("https://api.weixin.qq.com/sns/userinfo")                .addParams("access_token", access)                .addParams("openid", openId)                .addParams("user_id", String.valueOf(userConfig.user_id))                .build()                .execute(new StringCallback() {                    @Override                    public void onError(Call call, Exception e, int id) {                        Toast.makeText(WXEntryActivity.this, "登录失败", Toast.LENGTH_SHORT).show();                        finish();                    }                    @Override                    public void onResponse(String response, int id) {                        try {                            JSONObject jsonObject = new JSONObject(response);                            String openid = jsonObject.getString("openid");                            String unionid = jsonObject.getString("unionid");                            String nickName = jsonObject.getString("nickname");                            String headimgurl = jsonObject.getString("headimgurl");                            sendBrocast(openid, unionid, nickName, headimgurl);                            finish();                        } catch (JSONException e) {                            Toast.makeText(WXEntryActivity.this, "登录失败", Toast.LENGTH_SHORT).show();                            finish();                            e.printStackTrace();                        }                    }                });    }    private void sendBrocast(String openid, String uniid, String name, String icon) {        Intent intent = new Intent();        intent.setAction("WX_LOGIN");        intent.putExtra("openid", openid);        intent.putExtra("unionid", uniid);        intent.putExtra("nickname", name);        intent.putExtra("headimgurl", icon);        sendBroadcast(intent);    }    @Override    protected void onPause() {        overridePendingTransition(0, 0);        super.onPause();    }    /**     * 处理微信发出的向第三方应用请求app message     * <p>     * 在微信客户端中的聊天页面有“添加工具”，可以将本应用的图标添加到其中     * 此后点击图标，下面的代码会被执行。Demo仅仅只是打开自己而已，但你可     * 做点其他的事情，包括根本不打开任何页面     */   /* public void onGetMessageFromWXReq(WXMediaMessage msg) {        if (msg != null) {			Intent iLaunchMyself = getPackageManager().getLaunchIntentForPackage(getPackageName());			startActivity(iLaunchMyself);		}    }*/    /**     * 处理微信向第三方应用发起的消息     * <p>     * 此处用来接收从微信发送过来的消息，比方说本demo在wechatpage里面分享     * 应用时可以不分享应用文件，而分享一段应用的自定义信息。接受方的微信     * 客户端会通过这个方法，将这个信息发送回接收方手机上的本demo中，当作     * 回调。     * <p>     * 本Demo只是将信息展示出来，但你可做点其他的事情，而不仅仅只是Toast     */    /*public void onShowMessageFromWXReq(WXMediaMessage msg) {        if (msg != null && msg.mediaObject != null                && (msg.mediaObject instanceof WXAppExtendObject)) {            WXAppExtendObject obj = (WXAppExtendObject) msg.mediaObject;            Toast.makeText(this, obj.extInfo, Toast.LENGTH_SHORT).show();        }    }*/    private Wx_CallBack callbak;    public void setCallBack(Wx_CallBack callbak){        this.callbak = callbak;    }    public interface Wx_CallBack{        void wx_login(String oid, String uid, String name, String icon);    }}